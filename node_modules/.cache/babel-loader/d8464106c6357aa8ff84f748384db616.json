{"ast":null,"code":"var _jsxFileName = \"D:\\\\learn\\\\react\\\\myfirstapp\\\\src\\\\components\\\\UpdateProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router';\nimport { TextField, Typography, Box, makeStyles, Grid, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  header: {\n    color: 'white',\n    background: \"green\",\n    padding: '4px',\n    borderRadius: '5px'\n  },\n  contaniner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"10px\"\n  }\n});\n\nconst UpdateProfile = () => {\n  _s();\n\n  const [student, setStudent] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\"\n  });\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const classes = useStyle();\n\n  const inputEvent = e => {\n    setStudent(oldData => {\n      return { ...oldData,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const updateStudent = async () => {\n    await axios.put(`http://localhost:3000/students/${id}`, student);\n    navigate('/');\n  };\n\n  useEffect(() => {\n    const getCurrentData = async () => {\n      const result = await axios(`http://localhost:3000/students/${id}`);\n      const studentCurrentData = result.data;\n      setStudent(studentCurrentData);\n    };\n\n    getCurrentData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.contaniner,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              align: \"center\",\n              className: classes.header,\n              children: \"Edit Student Profile \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Firstname\",\n              placeholder: \"Enter Your First Name\",\n              color: \"secondary\",\n              onChange: e => {\n                inputEvent(e);\n              },\n              name: \"firstname\",\n              value: student.firstname,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Lastname\",\n              placeholder: \"Enter Your Last Name\",\n              color: \"secondary\",\n              onChange: e => {\n                inputEvent(e);\n              },\n              name: \"lastname\",\n              value: student.lastname,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Email\",\n              placeholder: \"Enter Your Email\",\n              color: \"secondary\",\n              onChange: e => {\n                inputEvent(e);\n              },\n              name: \"email\",\n              value: student.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: updateStudent,\n              fullWidth: true,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateProfile, \"vB1pbH1vKul/4ll8XDys08HgjHU=\", false, function () {\n  return [useParams, useNavigate, useStyle];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/learn/react/myfirstapp/src/components/UpdateProfile.jsx"],"names":["React","useState","useEffect","useParams","useNavigate","TextField","Typography","Box","makeStyles","Grid","Button","axios","useStyle","header","color","background","padding","borderRadius","contaniner","display","justifyContent","alignItems","marginTop","UpdateProfile","student","setStudent","firstname","lastname","email","id","navigate","classes","inputEvent","e","oldData","target","name","value","updateStudent","put","getCurrentData","result","studentCurrentData","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams,useNavigate } from 'react-router'\r\nimport { TextField, Typography, Box, makeStyles, Grid, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nconst useStyle = makeStyles({\r\n    header: {\r\n        color: 'white',\r\n        background: \"green\",\r\n        padding: '4px',\r\n        borderRadius: '5px'\r\n    },\r\n    contaniner: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: \"10px\"\r\n    }\r\n})\r\nconst UpdateProfile = () => {\r\n    const [student, setStudent] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\"\r\n    });\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const classes = useStyle();\r\n    const inputEvent = (e) => {\r\n        setStudent((oldData) => {\r\n            return {\r\n                ...oldData,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n    const updateStudent = async () => {\r\n        await axios.put(`http://localhost:3000/students/${id}`, student);\r\n        navigate('/');\r\n    }\r\n    useEffect(() => {\r\n        const getCurrentData = async () => {\r\n            const result = await axios(`http://localhost:3000/students/${id}`)\r\n            const studentCurrentData = result.data;\r\n            setStudent(studentCurrentData);\r\n        }\r\n        getCurrentData();\r\n    }, [id])\r\n    return (\r\n        <>\r\n            <Box className={classes.contaniner}>\r\n\r\n                <Grid item md={4} >\r\n                    <Box>\r\n                        <Box>\r\n                            <Typography variant='h5' align='center' className={classes.header} >Edit Student Profile </Typography>\r\n                        </Box>\r\n                        <Box pt={4}>\r\n                            <TextField variant='outlined' fullWidth label='Firstname' placeholder='Enter Your First Name' color=\"secondary\" onChange={(e) => {\r\n                                inputEvent(e);\r\n                            }} name=\"firstname\" value={student.firstname} required ></TextField>\r\n                        </Box>\r\n                        <Box pt={4}>\r\n                            <TextField variant='outlined' fullWidth label='Lastname' placeholder='Enter Your Last Name' color=\"secondary\" onChange={(e) => {\r\n                                inputEvent(e);\r\n                            }} name=\"lastname\" value={student.lastname} required></TextField>\r\n                        </Box>\r\n                        <Box pt={4}>\r\n                            <TextField variant='outlined' fullWidth label='Email' placeholder='Enter Your Email' color=\"secondary\" onChange={(e) => {\r\n                                inputEvent(e);\r\n                            }} name=\"email\" value={student.email} required ></TextField>\r\n                        </Box>\r\n                        <Box pt={4}>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={updateStudent} fullWidth>Update</Button>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}